# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    List as typing___List,
    Optional as typing___Optional,
    Text as typing___Text,
    Tuple as typing___Tuple,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class ModelCategory(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> ModelCategory: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[ModelCategory]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, ModelCategory]]: ...
VISIONCLASSIFICATION = typing___cast(ModelCategory, 0)
TEXTGENERATION = typing___cast(ModelCategory, 1)
IMAGESEGMENTATION = typing___cast(ModelCategory, 2)
IMAGECAPTIONING = typing___cast(ModelCategory, 3)

class GetModelsReq(google___protobuf___message___Message):

    def __init__(self,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetModelsReq: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

class ModelResponse(google___protobuf___message___Message):
    typeString = ... # type: typing___Text

    @property
    def text(self) -> TextGenerationResponse: ...

    @property
    def vision(self) -> VisionClassificationResponse: ...

    @property
    def segment(self) -> ImageSegmentationResponse: ...

    def __init__(self,
        typeString : typing___Optional[typing___Text] = None,
        text : typing___Optional[TextGenerationResponse] = None,
        vision : typing___Optional[VisionClassificationResponse] = None,
        segment : typing___Optional[ImageSegmentationResponse] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ModelResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"segment",u"text",u"vision"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"segment",u"text",u"typeString",u"vision"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"segment",b"segment",u"text",b"text",u"vision",b"vision"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"segment",b"text",b"typeString",b"vision"]) -> None: ...

class GetModelsResp(google___protobuf___message___Message):
    class Model(google___protobuf___message___Message):
        model_name = ... # type: typing___Text
        model_category = ... # type: ModelCategory
        uuid = ... # type: typing___Text

        def __init__(self,
            model_name : typing___Optional[typing___Text] = None,
            model_category : typing___Optional[ModelCategory] = None,
            uuid : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> GetModelsResp.Model: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"model_category",u"model_name",u"uuid"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[b"model_category",b"model_name",b"uuid"]) -> None: ...


    @property
    def models(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[GetModelsResp.Model]: ...

    def __init__(self,
        models : typing___Optional[typing___Iterable[GetModelsResp.Model]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> GetModelsResp: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"models"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"models"]) -> None: ...

class TextGenerationRequest(google___protobuf___message___Message):
    input_phrase = ... # type: typing___Text
    temperature = ... # type: float
    model_uuid = ... # type: typing___Text
    token = ... # type: typing___Text

    def __init__(self,
        input_phrase : typing___Optional[typing___Text] = None,
        temperature : typing___Optional[float] = None,
        model_uuid : typing___Optional[typing___Text] = None,
        token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> TextGenerationRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"input_phrase",u"model_uuid",u"temperature",u"token"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"input_phrase",b"model_uuid",b"temperature",b"token"]) -> None: ...

class TextGenerationResponse(google___protobuf___message___Message):
    generated_texts = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]

    def __init__(self,
        generated_texts : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> TextGenerationResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"generated_texts"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"generated_texts"]) -> None: ...

class VisionClassificationRequest(google___protobuf___message___Message):
    input_image = ... # type: typing___Text
    num_returns = ... # type: int
    model_uuid = ... # type: typing___Text
    token = ... # type: typing___Text

    def __init__(self,
        input_image : typing___Optional[typing___Text] = None,
        num_returns : typing___Optional[int] = None,
        model_uuid : typing___Optional[typing___Text] = None,
        token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> VisionClassificationRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"input_image",u"model_uuid",u"num_returns",u"token"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"input_image",b"model_uuid",b"num_returns",b"token"]) -> None: ...

class VisionClassificationResponse(google___protobuf___message___Message):
    class Result(google___protobuf___message___Message):
        rank = ... # type: int
        category = ... # type: typing___Text
        proba = ... # type: float

        def __init__(self,
            rank : typing___Optional[int] = None,
            category : typing___Optional[typing___Text] = None,
            proba : typing___Optional[float] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> VisionClassificationResponse.Result: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"category",u"proba",u"rank"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[b"category",b"proba",b"rank"]) -> None: ...


    @property
    def results(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[VisionClassificationResponse.Result]: ...

    def __init__(self,
        results : typing___Optional[typing___Iterable[VisionClassificationResponse.Result]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> VisionClassificationResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"results"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"results"]) -> None: ...

class ImageSegmentationRequest(google___protobuf___message___Message):
    input_image = ... # type: typing___Text
    model_uuid = ... # type: typing___Text
    token = ... # type: typing___Text

    def __init__(self,
        input_image : typing___Optional[typing___Text] = None,
        model_uuid : typing___Optional[typing___Text] = None,
        token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ImageSegmentationRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"input_image",u"model_uuid",u"token"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"input_image",b"model_uuid",b"token"]) -> None: ...

class ImageSegmentationResponse(google___protobuf___message___Message):
    output_image = ... # type: typing___Text

    def __init__(self,
        output_image : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ImageSegmentationResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"output_image"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"output_image"]) -> None: ...

class ImageDownloadRequest(google___protobuf___message___Message):
    url = ... # type: typing___Text

    def __init__(self,
        url : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ImageDownloadRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"url"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"url"]) -> None: ...

class ImageDownloadResponse(google___protobuf___message___Message):
    image = ... # type: typing___Text

    def __init__(self,
        image : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ImageDownloadResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"image"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"image"]) -> None: ...
