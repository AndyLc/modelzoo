# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import _protos.services_pb2 as services__pb2


class ModelStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.VisionClassification = channel.unary_unary(
        '/Model/VisionClassification',
        request_serializer=services__pb2.VisionClassificationRequest.SerializeToString,
        response_deserializer=services__pb2.ModelResponse.FromString,
        )
    self.TextGeneration = channel.unary_unary(
        '/Model/TextGeneration',
        request_serializer=services__pb2.TextGenerationRequest.SerializeToString,
        response_deserializer=services__pb2.ModelResponse.FromString,
        )
    self.ImageSegmentation = channel.unary_unary(
        '/Model/ImageSegmentation',
        request_serializer=services__pb2.ImageSegmentationRequest.SerializeToString,
        response_deserializer=services__pb2.ModelResponse.FromString,
        )
    self.GetImage = channel.unary_unary(
        '/Model/GetImage',
        request_serializer=services__pb2.ImageDownloadRequest.SerializeToString,
        response_deserializer=services__pb2.ImageDownloadResponse.FromString,
        )
    self.ListModels = channel.unary_unary(
        '/Model/ListModels',
        request_serializer=services__pb2.GetModelsReq.SerializeToString,
        response_deserializer=services__pb2.GetModelsResp.FromString,
        )
    self.ModelUUID = channel.unary_unary(
        '/Model/ModelUUID',
        request_serializer=services__pb2.ModelUUIDRequest.SerializeToString,
        response_deserializer=services__pb2.ModelUUIDResponse.FromString,
        )


class ModelServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def VisionClassification(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TextGeneration(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ImageSegmentation(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetImage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListModels(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ModelUUID(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ModelServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'VisionClassification': grpc.unary_unary_rpc_method_handler(
          servicer.VisionClassification,
          request_deserializer=services__pb2.VisionClassificationRequest.FromString,
          response_serializer=services__pb2.ModelResponse.SerializeToString,
      ),
      'TextGeneration': grpc.unary_unary_rpc_method_handler(
          servicer.TextGeneration,
          request_deserializer=services__pb2.TextGenerationRequest.FromString,
          response_serializer=services__pb2.ModelResponse.SerializeToString,
      ),
      'ImageSegmentation': grpc.unary_unary_rpc_method_handler(
          servicer.ImageSegmentation,
          request_deserializer=services__pb2.ImageSegmentationRequest.FromString,
          response_serializer=services__pb2.ModelResponse.SerializeToString,
      ),
      'GetImage': grpc.unary_unary_rpc_method_handler(
          servicer.GetImage,
          request_deserializer=services__pb2.ImageDownloadRequest.FromString,
          response_serializer=services__pb2.ImageDownloadResponse.SerializeToString,
      ),
      'ListModels': grpc.unary_unary_rpc_method_handler(
          servicer.ListModels,
          request_deserializer=services__pb2.GetModelsReq.FromString,
          response_serializer=services__pb2.GetModelsResp.SerializeToString,
      ),
      'ModelUUID': grpc.unary_unary_rpc_method_handler(
          servicer.ModelUUID,
          request_deserializer=services__pb2.ModelUUIDRequest.FromString,
          response_serializer=services__pb2.ModelUUIDResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Model', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
